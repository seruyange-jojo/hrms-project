
services:
  db:
    image: postgres:16
    container_name: hrms_postgres
    environment:
      POSTGRES_DB: hrms_db
      POSTGRES_USER: hrms_user
      POSTGRES_PASSWORD: hrms_password
    ports: ["5433:5432"]
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U hrms_user -d hrms_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - hrms_network

  api:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: hrms_backend
    environment:
      DB_HOST: "db"
      DB_PORT: "5432"
      DB_USER: "hrms_user"
      DB_PASSWORD: "hrms_password"
      DB_NAME: "hrms_db"
      DB_SSLMODE: "disable"
      JWT_SECRET: "your-super-secret-jwt-key-change-in-production"
      GIN_MODE: "debug"
      ALLOWED_ORIGINS: "http://localhost:3001,http://localhost:5173,http://web:80,http://hrms_frontend:80,http://172.18.0.1:3001,http://172.18.0.1:5173"
      PORT: "8080"
    ports: ["8080:8080"]
    depends_on:
      db:
        condition: service_healthy
    networks:
      - hrms_network
    restart: unless-stopped

  web:
    build:
      context: ../frontend
      dockerfile: Dockerfile
    container_name: hrms_frontend
    environment:
      VITE_API_BASE_URL: "http://localhost:8080/api/v1"
      VITE_DEMO_MODE: "false"
    ports: ["3001:80"]
    depends_on:
      - api
    networks:
      - hrms_network
    restart: unless-stopped

volumes:
  db_data:

networks:
  hrms_network:
    driver: bridge
